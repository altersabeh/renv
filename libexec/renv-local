#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific R version(s)
#
# Usage: renv local <version> <version2> <..>
#        renv local --unset
#
# Sets the local application-specific R version(s) by writing the
# version name to a file named `.R-version'.
#
# When you run an R command, renv will look for a `.R-version'
# file in the current directory and each parent directory. If no such
# file is found in the tree, renv will use the global R version
# specified with `renv global'. A version specified with the
# `RENV_VERSION' environment variable takes precedence over local
# and global versions.
#
# <version> can be specified multiple times and should be a version
# tag known to renv.  The special version string `system' will use
# your default system R.  Run `renv versions' for a list of
# available R versions.
#
# Example: To enable the R-3.0.0 and R-4.0.0 shims to find their
#          respective executables you could set both versions with:
#
# 'renv local 3.0.0 4.0.0'


set -e
[ -n "$RENV_DEBUG" ] && set -x

# Provide renv completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  exec renv-versions --bare
fi

versions=("$@")

if [ "$versions" = "--unset" ]; then
  rm -f .R-version
elif [ -n "$versions" ]; then
  renv-version-file-write .R-version "${versions[@]}"
else
  if version_file="$(renv-version-file "$PWD")"; then
    IFS=: versions=($(renv-version-file-read "$version_file"))
    for version in "${versions[@]}"; do
      echo "$version"
    done
  else
    echo "renv: no local version configured for this directory" >&2
    exit 1
  fi
fi
